{"version":3,"sources":["api/api.js","components/NotFound.js","components/SearchInput.js","components/WeatherInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","apiKey","process","base","fetch","query","setQuery","setResponseCode","setWeather","trim","then","response","json","result","cod","NotFound","className","SearchInput","props","placeholder","onKeyPress","searchHandler","onChange","event","target","value","inputValue","WeatherInfo","weatherInfo","name","sys","country","Date","toDateString","Math","round","main","temp","weather","App","useState","responseCode","cls","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAAaA,EAAM,CACfC,OAAQC,mCACRC,KAAMD,mDACNE,MAHe,8HAGTC,EAAOC,EAAUC,EAAiBC,GACpCJ,MAAM,GAAD,OAAIJ,EAAIG,KAAR,aAAiBE,EAAMI,OAAvB,+BAAoDT,EAAIC,SACxDS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACiB,QAAfA,EAAOC,IACPP,EAAgB,MAEhBA,EAAgB,KAChBC,EAAWK,GACXP,EAAS,Y,OCZd,SAASS,IACpB,OAAO,qBAAKC,UAAU,kBAAf,uBCDI,SAASC,EAAYC,GAChC,OACI,qBAAKF,UAAU,aAAf,SACI,uBACIA,UAAU,gBACVG,YAAY,cACZC,WAAYF,EAAMG,cAClBC,SAAU,SAACC,GAAD,OAAWL,EAAMZ,SAASiB,EAAMC,OAAOC,QACjDA,MAAOP,EAAMQ,eCRd,SAASC,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAClC,OACI,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,eAAf,UACI,uBAAMA,UAAU,WAAhB,UAA4BY,EAAYC,KAAxC,KAAgDD,EAAYE,IAAIC,WAChE,sBAAMf,UAAU,OAAhB,UAAwB,IAAIgB,MAAOC,oBAEvC,sBAAKjB,UAAU,cAAf,UACI,uBAAMA,UAAU,cAAhB,UAA+BkB,KAAKC,MAAMP,EAAYQ,KAAKC,MAA3D,UACA,sBAAMrB,UAAU,UAAhB,SAA2BY,EAAYU,QAAQ,GAAGF,aCyBnDG,MA5Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOnC,EAAP,KAAcC,EAAd,KACA,EAA8BkC,mBAAS,IAAvC,mBAAOF,EAAP,KAAgB9B,EAAhB,KACA,EAAwCgC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBlC,EAArB,KAYA,OACE,qBAAKS,UATP,WACE,GAAIsB,EAAS,CACX,GAAIA,EAAQF,KAAKC,MAAQ,GAAI,MAAO,MACpC,GAAIC,EAAQF,KAAKC,KAAO,IAAMC,EAAQF,KAAKC,KAAO,EAAG,MAAO,WAC5D,GAAIC,EAAQF,KAAKC,MAAQ,EAAG,MAAO,gBAErC,MAAO,MAGSK,GAAhB,SACE,sBAAK1B,UAAU,aAAf,UACE,cAACC,EAAD,CAAaI,cAdF,SAAAE,GACG,UAAdA,EAAMoB,KAAmBtC,GAAOL,EAAII,MAAMC,EAAOC,EAAUC,EAAiBC,IAatCkB,WAAYrB,EAAOC,SAAUA,IACjD,MAAjBmC,GAAwBH,EACrB,cAACX,EAAD,CAAaC,YAAaU,IACT,MAAjBG,EACE,cAAC1B,EAAD,IACA,SCjBC6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bd906204.chunk.js","sourcesContent":["export const api = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    base: process.env.REACT_APP_BASE_URL,\r\n    fetch(query, setQuery, setResponseCode, setWeather) {\r\n        fetch(`${api.base}q=${query.trim()}&units=metric&appid=${api.apiKey}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.cod === '404') {\r\n                    setResponseCode(404)\r\n                } else {\r\n                    setResponseCode(200)\r\n                    setWeather(result)\r\n                    setQuery('')\r\n                }\r\n            })\r\n    }\r\n}\r\n","export default function NotFound() {\r\n    return <div className='not-found-error'>Not Found</div>\r\n}","export default function SearchInput(props) {\r\n    return (\r\n        <div className='input__box'>\r\n            <input\r\n                className='search__input'\r\n                placeholder='Search city'\r\n                onKeyPress={props.searchHandler}\r\n                onChange={(event) => props.setQuery(event.target.value)}\r\n                value={props.inputValue}\r\n            />\r\n        </div>\r\n    )\r\n}","export default function WeatherInfo({ weatherInfo }) {\r\n    return (\r\n        <div className='weather-info'>\r\n            <div className='location-box'>\r\n                <span className='location'>{weatherInfo.name}, {weatherInfo.sys.country}</span>\r\n                <span className='date'>{new Date().toDateString()}</span>\r\n            </div>\r\n            <div className='weather-box'>\r\n                <span className='temperature'>{Math.round(weatherInfo.main.temp)}Â°</span>\r\n                <span className='weather'>{weatherInfo.weather[0].main}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\";\nimport { api } from \"../api/api\";\nimport NotFound from \"./NotFound\";\nimport SearchInput from \"./SearchInput\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState('')\n  const [responseCode, setResponseCode] = useState('')\n  const onSearch = event => {\n    if (event.key === 'Enter' && query) api.fetch(query, setQuery, setResponseCode, setWeather)\n  }\n  function cls() {\n    if (weather) {\n      if (weather.main.temp >= 16) return 'app'\n      if (weather.main.temp < 16 && weather.main.temp > 0) return 'app cold'\n      if (weather.main.temp <= 0) return 'app very-cold'\n    }\n    return 'app'\n  }\n  return (\n    <div className={cls()}>\n      <div className='app__inner'>\n        <SearchInput searchHandler={onSearch} inputValue={query} setQuery={setQuery} />\n        {responseCode === 200 && weather\n          ? <WeatherInfo weatherInfo={weather} />\n          : responseCode === 404\n            ? <NotFound />\n            : ''}\n      </div>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}